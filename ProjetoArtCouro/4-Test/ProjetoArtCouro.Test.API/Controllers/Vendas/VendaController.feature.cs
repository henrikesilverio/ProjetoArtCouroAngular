// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ProjetoArtCouro.Test.API.Controllers.Vendas
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("VendaController")]
    public partial class VendaControllerFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "VendaController.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "VendaController", "\tPara funcionalidade de venda de produtos\r\n\tEu como um usuário do sistema\r\n\tDesej" +
                    "o utilizar os métodos CRUD da venda.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "Nome",
                        "Henrique"});
            table1.AddRow(new string[] {
                        "CPF",
                        "123.456.789.09"});
            table1.AddRow(new string[] {
                        "RG",
                        "224445556"});
            table1.AddRow(new string[] {
                        "Sexo",
                        "M"});
            table1.AddRow(new string[] {
                        "EstadoCivilId",
                        "1"});
            table1.AddRow(new string[] {
                        "EPessoaFisica",
                        "true"});
            table1.AddRow(new string[] {
                        "PapelPessoa",
                        "4"});
#line 7
 testRunner.Given("que preencha os dados do cliente com as seguintes informações:", ((string)(null)), table1, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "Logradouro",
                        "Rua da vida"});
            table2.AddRow(new string[] {
                        "Bairro",
                        "Jardim mundo"});
            table2.AddRow(new string[] {
                        "Numero",
                        "400"});
            table2.AddRow(new string[] {
                        "Cidade",
                        "Sarandi"});
            table2.AddRow(new string[] {
                        "Cep",
                        "87112-540"});
            table2.AddRow(new string[] {
                        "UFId",
                        "16"});
#line 16
 testRunner.And("que preecha os dados do endereço do cliente com as seguintes informações:", ((string)(null)), table2, "E ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "Telefone",
                        "(44) 3232-5566"});
#line 24
 testRunner.And("que preecha os dados de meios de comunicação do cliente com as seguintes informaç" +
                    "ões:", ((string)(null)), table3, "E ");
#line 27
 testRunner.When("realizar uma chamada Post ao endereço \'api/Cliente/CriarCliente\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table4.AddRow(new string[] {
                        "Nome",
                        "Henrique"});
            table4.AddRow(new string[] {
                        "CPF",
                        "123.456.789.09"});
            table4.AddRow(new string[] {
                        "RG",
                        "224445556"});
            table4.AddRow(new string[] {
                        "Sexo",
                        "M"});
            table4.AddRow(new string[] {
                        "EstadoCivilId",
                        "1"});
            table4.AddRow(new string[] {
                        "EPessoaFisica",
                        "true"});
            table4.AddRow(new string[] {
                        "PapelPessoa",
                        "4"});
#line 29
 testRunner.Given("que preencha os dados do fornecedor com as seguintes informações:", ((string)(null)), table4, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "Logradouro",
                        "Rua da vida"});
            table5.AddRow(new string[] {
                        "Bairro",
                        "Jardim mundo"});
            table5.AddRow(new string[] {
                        "Numero",
                        "400"});
            table5.AddRow(new string[] {
                        "Cidade",
                        "Sarandi"});
            table5.AddRow(new string[] {
                        "Cep",
                        "87112-540"});
            table5.AddRow(new string[] {
                        "UFId",
                        "16"});
#line 38
 testRunner.And("que preecha os dados do endereço do fornecedor com as seguintes informações:", ((string)(null)), table5, "E ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table6.AddRow(new string[] {
                        "Telefone",
                        "(44) 3232-5566"});
#line 46
 testRunner.And("que preecha os dados de meios de comunicação do fornecedor com as seguintes infor" +
                    "mações:", ((string)(null)), table6, "E ");
#line 49
 testRunner.When("realizar uma chamada Post ao endereço \'api/Fornecedor/CriarFornecedor\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table7.AddRow(new string[] {
                        "Descricao",
                        "1 Parcela"});
            table7.AddRow(new string[] {
                        "QuantidadeParcelas",
                        "1"});
            table7.AddRow(new string[] {
                        "Ativo",
                        "true"});
#line 51
 testRunner.Given("que preencha os dados da condicao de pagamento com as seguintes informações:", ((string)(null)), table7, "Dado ");
#line 56
 testRunner.When("realizar uma chamada Post ao endereço \'api/CondicaoPagamento/CriarCondicaoPagamen" +
                    "to\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "Descricao",
                        "Cartão"});
            table8.AddRow(new string[] {
                        "Ativo",
                        "true"});
#line 58
 testRunner.Given("que preencha os dados da forma de pagamento com as seguintes informações:", ((string)(null)), table8, "Dado ");
#line 62
 testRunner.When("realizar uma chamada Post ao endereço \'api/FormaPagamento/CriarFormaPagamento\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table9.AddRow(new string[] {
                        "Descricao",
                        "Sapato"});
            table9.AddRow(new string[] {
                        "UnidadeCodigo",
                        "3"});
            table9.AddRow(new string[] {
                        "PrecoCusto",
                        "10,00"});
            table9.AddRow(new string[] {
                        "PrecoVenda",
                        "20,00"});
#line 64
 testRunner.Given("que preencha os dados do produto com as seguintes informações:", ((string)(null)), table9, "Dado ");
#line 70
 testRunner.When("realizar uma chamada Post ao endereço \'api/Produto/CriarProduto\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table10.AddRow(new string[] {
                        "DataCadastro",
                        "08/10/2018 8:00"});
            table10.AddRow(new string[] {
                        "StatusCompra",
                        "Aberto"});
            table10.AddRow(new string[] {
                        "ValorTotalBruto",
                        "10,00"});
            table10.AddRow(new string[] {
                        "ValorTotalFrete",
                        "0,00"});
            table10.AddRow(new string[] {
                        "ValorTotalLiquido",
                        "10,00"});
#line 72
 testRunner.Given("que preencha os dados da compra com as seguintes informações:", ((string)(null)), table10, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Codigo",
                        "Descricao",
                        "Quantidade",
                        "PrecoVenda",
                        "ValorBruto",
                        "ValorLiquido"});
            table11.AddRow(new string[] {
                        "1",
                        "Cinto",
                        "1",
                        "10,00",
                        "10,00",
                        "10,00"});
#line 79
 testRunner.And("que preecha os dados do item de compra com as seguintes informações:", ((string)(null)), table11, "E ");
#line 82
 testRunner.When("realizar uma chamada Post ao endereço \'api/Compra/CriarCompra\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table12.AddRow(new string[] {
                        "CodigoCompra",
                        "1"});
            table12.AddRow(new string[] {
                        "DataCadastro",
                        "08/10/2018 8:00"});
            table12.AddRow(new string[] {
                        "StatusCompra",
                        "Aberto"});
            table12.AddRow(new string[] {
                        "ValorTotalBruto",
                        "10,00"});
            table12.AddRow(new string[] {
                        "ValorTotalFrete",
                        "0,00"});
            table12.AddRow(new string[] {
                        "ValorTotalLiquido",
                        "10,00"});
            table12.AddRow(new string[] {
                        "FornecedorId",
                        "1"});
            table12.AddRow(new string[] {
                        "FormaPagamentoId",
                        "1"});
            table12.AddRow(new string[] {
                        "CondicaoPagamentoId",
                        "1"});
#line 84
 testRunner.Given("que preencha os dados da compra com as seguintes informações:", ((string)(null)), table12, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Codigo",
                        "Descricao",
                        "Quantidade",
                        "PrecoVenda",
                        "ValorBruto",
                        "ValorLiquido"});
            table13.AddRow(new string[] {
                        "1",
                        "Cinto",
                        "1",
                        "10,00",
                        "10,00",
                        "10,00"});
#line 95
 testRunner.And("que preecha os dados do item de compra com as seguintes informações:", ((string)(null)), table13, "E ");
#line 98
 testRunner.When("realizar uma chamada Put ao endereço \'api/Compra/EditarCompra\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Tentar realizar um orçamento de venda sem preencher todos os campos")]
        public virtual void TentarRealizarUmOrcamentoDeVendaSemPreencherTodosOsCampos()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Tentar realizar um orçamento de venda sem preencher todos os campos", null, ((string[])(null)));
#line 100
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
#line 101
 testRunner.Given("que preencha os dados da venda com as seguintes informações:", ((string)(null)), table14, "Dado ");
#line 103
 testRunner.When("realizar uma chamada Post ao endereço \'api/Venda/CriarVenda\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 104
 testRunner.Then("retorne erro", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Gerar um orçamento preenchendo todos os campos")]
        public virtual void GerarUmOrcamentoPreenchendoTodosOsCampos()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar um orçamento preenchendo todos os campos", null, ((string[])(null)));
#line 106
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table15.AddRow(new string[] {
                        "DataCadastro",
                        "08/10/2018 8:00"});
            table15.AddRow(new string[] {
                        "StatusVenda",
                        "Aberto"});
            table15.AddRow(new string[] {
                        "ValorTotalBruto",
                        "10,00"});
            table15.AddRow(new string[] {
                        "ValorTotalDesconto",
                        "0,50"});
            table15.AddRow(new string[] {
                        "ValorTotalLiquido",
                        "10,00"});
#line 107
 testRunner.Given("que preencha os dados da venda com as seguintes informações:", ((string)(null)), table15, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Codigo",
                        "Descricao",
                        "Quantidade",
                        "PrecoVenda",
                        "ValorBruto",
                        "ValorDesconto",
                        "ValorLiquido"});
            table16.AddRow(new string[] {
                        "1",
                        "Cinto",
                        "1",
                        "10,00",
                        "10,00",
                        "0,50",
                        "10,00"});
#line 114
 testRunner.And("que preecha os dados do item de venda com as seguintes informações:", ((string)(null)), table16, "E ");
#line 117
 testRunner.When("realizar uma chamada Post ao endereço \'api/Venda/CriarVenda\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 118
 testRunner.Then("retorne sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Pesquisar uma venda sem filtros")]
        public virtual void PesquisarUmaVendaSemFiltros()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Pesquisar uma venda sem filtros", null, ((string[])(null)));
#line 120
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
#line 121
 testRunner.Given("que preencha os dados do filtro de pesquisa de venda com as seguintes informações" +
                    ":", ((string)(null)), table17, "Dado ");
#line 123
 testRunner.When("realizar uma chamada Post ao endereço \'api/Venda/PesquisarVenda\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 124
 testRunner.Then("retorne sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Pesquisar uma venda por código da venda, código do cliente, data de cadastro, sta" +
            "tus, nome do cliente, CPFCNPJ")]
        public virtual void PesquisarUmaVendaPorCodigoDaVendaCodigoDoClienteDataDeCadastroStatusNomeDoClienteCPFCNPJ()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Pesquisar uma venda por código da venda, código do cliente, data de cadastro, sta" +
                    "tus, nome do cliente, CPFCNPJ", null, ((string[])(null)));
#line 126
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table18.AddRow(new string[] {
                        "DataCadastro",
                        "08/10/2018 8:00"});
            table18.AddRow(new string[] {
                        "StatusVenda",
                        "Aberto"});
            table18.AddRow(new string[] {
                        "ValorTotalBruto",
                        "10,00"});
            table18.AddRow(new string[] {
                        "ValorTotalDesconto",
                        "0,50"});
            table18.AddRow(new string[] {
                        "ValorTotalLiquido",
                        "10,00"});
#line 127
 testRunner.Given("que preencha os dados da venda com as seguintes informações:", ((string)(null)), table18, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Codigo",
                        "Descricao",
                        "Quantidade",
                        "PrecoVenda",
                        "ValorBruto",
                        "ValorDesconto",
                        "ValorLiquido"});
            table19.AddRow(new string[] {
                        "1",
                        "Cinto",
                        "1",
                        "10,00",
                        "10,00",
                        "0,50",
                        "10,00"});
#line 134
 testRunner.And("que preecha os dados do item de venda com as seguintes informações:", ((string)(null)), table19, "E ");
#line 137
 testRunner.When("realizar uma chamada Post ao endereço \'api/Venda/CriarVenda\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 138
 testRunner.Then("retorne sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table20.AddRow(new string[] {
                        "CodigoVenda",
                        "1"});
            table20.AddRow(new string[] {
                        "CodigoCliente",
                        "1"});
            table20.AddRow(new string[] {
                        "DataCadastro",
                        "08/10/2018"});
            table20.AddRow(new string[] {
                        "StatusId",
                        "1"});
            table20.AddRow(new string[] {
                        "NomeCliente",
                        "Henrique"});
            table20.AddRow(new string[] {
                        "CPFCNPJ",
                        "123.456.789.09"});
#line 139
 testRunner.Given("que preencha os dados do filtro de pesquisa de venda com as seguintes informações" +
                    ":", ((string)(null)), table20, "Dado ");
#line 147
 testRunner.When("realizar uma chamada Post ao endereço \'api/Venda/PesquisarVenda\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 148
 testRunner.Then("retorne sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Pesquisar uma venda por código da venda")]
        public virtual void PesquisarUmaVendaPorCodigoDaVenda()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Pesquisar uma venda por código da venda", null, ((string[])(null)));
#line 150
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table21.AddRow(new string[] {
                        "DataCadastro",
                        "08/10/2018 8:00"});
            table21.AddRow(new string[] {
                        "StatusVenda",
                        "Aberto"});
            table21.AddRow(new string[] {
                        "ValorTotalBruto",
                        "10,00"});
            table21.AddRow(new string[] {
                        "ValorTotalDesconto",
                        "0,50"});
            table21.AddRow(new string[] {
                        "ValorTotalLiquido",
                        "10,00"});
#line 151
 testRunner.Given("que preencha os dados da venda com as seguintes informações:", ((string)(null)), table21, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Codigo",
                        "Descricao",
                        "Quantidade",
                        "PrecoVenda",
                        "ValorBruto",
                        "ValorDesconto",
                        "ValorLiquido"});
            table22.AddRow(new string[] {
                        "1",
                        "Cinto",
                        "1",
                        "10,00",
                        "10,00",
                        "0,50",
                        "10,00"});
#line 158
 testRunner.And("que preecha os dados do item de venda com as seguintes informações:", ((string)(null)), table22, "E ");
#line 161
 testRunner.When("realizar uma chamada Post ao endereço \'api/Venda/CriarVenda\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 162
 testRunner.Then("retorne sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line 163
 testRunner.When("realizar uma chamada Get ao endereço \'api/Venda/PesquisarVendaPorCodigo/1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 164
 testRunner.Then("retorne sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Apartir de um orçamento gerar uma venda preenchendo todos os campos")]
        public virtual void ApartirDeUmOrcamentoGerarUmaVendaPreenchendoTodosOsCampos()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Apartir de um orçamento gerar uma venda preenchendo todos os campos", null, ((string[])(null)));
#line 166
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table23.AddRow(new string[] {
                        "DataCadastro",
                        "08/10/2018 8:00"});
            table23.AddRow(new string[] {
                        "StatusVenda",
                        "Aberto"});
            table23.AddRow(new string[] {
                        "ValorTotalBruto",
                        "10,00"});
            table23.AddRow(new string[] {
                        "ValorTotalDesconto",
                        "0,50"});
            table23.AddRow(new string[] {
                        "ValorTotalLiquido",
                        "10,00"});
#line 167
 testRunner.Given("que preencha os dados da venda com as seguintes informações:", ((string)(null)), table23, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Codigo",
                        "Descricao",
                        "Quantidade",
                        "PrecoVenda",
                        "ValorBruto",
                        "ValorDesconto",
                        "ValorLiquido"});
            table24.AddRow(new string[] {
                        "1",
                        "Cinto",
                        "1",
                        "10,00",
                        "10,00",
                        "0,50",
                        "10,00"});
#line 174
 testRunner.And("que preecha os dados do item de venda com as seguintes informações:", ((string)(null)), table24, "E ");
#line 177
 testRunner.When("realizar uma chamada Post ao endereço \'api/Venda/CriarVenda\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 178
 testRunner.Then("retorne sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table25.AddRow(new string[] {
                        "CodigoVenda",
                        "1"});
            table25.AddRow(new string[] {
                        "DataCadastro",
                        "08/10/2018 8:00"});
            table25.AddRow(new string[] {
                        "StatusVenda",
                        "Aberto"});
            table25.AddRow(new string[] {
                        "ValorTotalBruto",
                        "10,00"});
            table25.AddRow(new string[] {
                        "ValorTotalDesconto",
                        "0,50"});
            table25.AddRow(new string[] {
                        "ValorTotalLiquido",
                        "10,00"});
            table25.AddRow(new string[] {
                        "ClienteId",
                        "1"});
            table25.AddRow(new string[] {
                        "FormaPagamentoId",
                        "1"});
            table25.AddRow(new string[] {
                        "CondicaoPagamentoId",
                        "1"});
#line 179
 testRunner.Given("que preencha os dados da venda com as seguintes informações:", ((string)(null)), table25, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Codigo",
                        "Descricao",
                        "Quantidade",
                        "PrecoVenda",
                        "ValorBruto",
                        "ValorDesconto",
                        "ValorLiquido"});
            table26.AddRow(new string[] {
                        "1",
                        "Cinto",
                        "1",
                        "10,00",
                        "10,00",
                        "0,50",
                        "10,00"});
#line 190
 testRunner.And("que preecha os dados do item de venda com as seguintes informações:", ((string)(null)), table26, "E ");
#line 193
 testRunner.When("realizar uma chamada Put ao endereço \'api/Venda/EditarVenda\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 194
 testRunner.Then("retorne sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cancelar uma venda preenchendo todos os campos")]
        public virtual void CancelarUmaVendaPreenchendoTodosOsCampos()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cancelar uma venda preenchendo todos os campos", null, ((string[])(null)));
#line 196
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table27.AddRow(new string[] {
                        "DataCadastro",
                        "08/10/2018 8:00"});
            table27.AddRow(new string[] {
                        "StatusVenda",
                        "Aberto"});
            table27.AddRow(new string[] {
                        "ValorTotalBruto",
                        "10,00"});
            table27.AddRow(new string[] {
                        "ValorTotalDesconto",
                        "0,50"});
            table27.AddRow(new string[] {
                        "ValorTotalLiquido",
                        "10,00"});
#line 197
 testRunner.Given("que preencha os dados da venda com as seguintes informações:", ((string)(null)), table27, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Codigo",
                        "Descricao",
                        "Quantidade",
                        "PrecoVenda",
                        "ValorBruto",
                        "ValorDesconto",
                        "ValorLiquido"});
            table28.AddRow(new string[] {
                        "1",
                        "Cinto",
                        "1",
                        "10,00",
                        "10,00",
                        "0,50",
                        "10,00"});
#line 204
 testRunner.And("que preecha os dados do item de venda com as seguintes informações:", ((string)(null)), table28, "E ");
#line 207
 testRunner.When("realizar uma chamada Post ao endereço \'api/Venda/CriarVenda\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 208
 testRunner.Then("retorne sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table29.AddRow(new string[] {
                        "CodigoVenda",
                        "1"});
            table29.AddRow(new string[] {
                        "DataCadastro",
                        "08/10/2018 8:00"});
            table29.AddRow(new string[] {
                        "StatusVenda",
                        "Aberto"});
            table29.AddRow(new string[] {
                        "ValorTotalBruto",
                        "10,00"});
            table29.AddRow(new string[] {
                        "ValorTotalDesconto",
                        "0,50"});
            table29.AddRow(new string[] {
                        "ValorTotalLiquido",
                        "10,00"});
            table29.AddRow(new string[] {
                        "ClienteId",
                        "1"});
            table29.AddRow(new string[] {
                        "FormaPagamentoId",
                        "1"});
            table29.AddRow(new string[] {
                        "CondicaoPagamentoId",
                        "1"});
#line 209
 testRunner.Given("que preencha os dados da venda com as seguintes informações:", ((string)(null)), table29, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Codigo",
                        "Descricao",
                        "Quantidade",
                        "PrecoVenda",
                        "ValorBruto",
                        "ValorDesconto",
                        "ValorLiquido"});
            table30.AddRow(new string[] {
                        "1",
                        "Cinto",
                        "1",
                        "10,00",
                        "10,00",
                        "0,50",
                        "10,00"});
#line 220
 testRunner.And("que preecha os dados do item de venda com as seguintes informações:", ((string)(null)), table30, "E ");
#line 223
 testRunner.When("realizar uma chamada Put ao endereço \'api/Venda/EditarVenda\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 224
 testRunner.Then("retorne sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table31.AddRow(new string[] {
                        "CodigoVenda",
                        "1"});
            table31.AddRow(new string[] {
                        "DataCadastro",
                        "08/10/2018 8:00"});
            table31.AddRow(new string[] {
                        "StatusVenda",
                        "Confirmado"});
            table31.AddRow(new string[] {
                        "ValorTotalBruto",
                        "10,00"});
            table31.AddRow(new string[] {
                        "ValorTotalDesconto",
                        "0,50"});
            table31.AddRow(new string[] {
                        "ValorTotalLiquido",
                        "10,00"});
#line 225
 testRunner.Given("que preencha os dados da venda com as seguintes informações:", ((string)(null)), table31, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Codigo",
                        "Descricao",
                        "Quantidade",
                        "PrecoVenda",
                        "ValorBruto",
                        "ValorDesconto",
                        "ValorLiquido"});
            table32.AddRow(new string[] {
                        "1",
                        "Cinto",
                        "1",
                        "10,00",
                        "10,00",
                        "0,50",
                        "10,00"});
#line 233
 testRunner.And("que preecha os dados do item de venda com as seguintes informações:", ((string)(null)), table32, "E ");
#line 236
 testRunner.When("realizar uma chamada Put ao endereço \'api/Venda/EditarVenda\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 237
 testRunner.Then("retorne sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Excluir uma venda por código:")]
        public virtual void ExcluirUmaVendaPorCodigo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Excluir uma venda por código:", null, ((string[])(null)));
#line 239
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table33.AddRow(new string[] {
                        "DataCadastro",
                        "08/10/2018 8:00"});
            table33.AddRow(new string[] {
                        "StatusVenda",
                        "Aberto"});
            table33.AddRow(new string[] {
                        "ValorTotalBruto",
                        "10,00"});
            table33.AddRow(new string[] {
                        "ValorTotalDesconto",
                        "0,50"});
            table33.AddRow(new string[] {
                        "ValorTotalLiquido",
                        "10,00"});
#line 240
 testRunner.Given("que preencha os dados da venda com as seguintes informações:", ((string)(null)), table33, "Dado ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Codigo",
                        "Descricao",
                        "Quantidade",
                        "PrecoVenda",
                        "ValorBruto",
                        "ValorDesconto",
                        "ValorLiquido"});
            table34.AddRow(new string[] {
                        "1",
                        "Cinto",
                        "1",
                        "10,00",
                        "10,00",
                        "0,50",
                        "10,00"});
#line 247
 testRunner.And("que preecha os dados do item de venda com as seguintes informações:", ((string)(null)), table34, "E ");
#line 250
 testRunner.When("realizar uma chamada Post ao endereço \'api/Venda/CriarVenda\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 251
 testRunner.Then("retorne sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line 252
 testRunner.When("realizar uma chamada Delete ao endereço \'api/Venda/ExcluirVenda/1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 253
 testRunner.Then("retorne sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
